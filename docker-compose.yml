version: '3'

services:
  keycloak-db:
    image: postgres
    container_name: keycloak-db
    restart: always
    expose:
      - 5433
    ports:
      - 5433:5433
    command: -p 5433
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  keycloak: 
    image: quay.io/keycloak/keycloak:legacy
    container_name: keycloak
    restart: always
    command: 
      - "-b 0.0.0.0 -Djboss.socket.binding.port-offset=1 -Djboss.bind.address.private=127.0.0.1 -Djboss.bind.address=0.0.0.0 -Djgroups.bind_addr=127.0.0.1 -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json"
    ports: 
      - 8081:8081
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-db
      DB_PORT: 5433
      DB_DATABASE: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    volumes:
      - ./realm-export.json:/opt/jboss/keycloak/imports/realm-export.json
    depends_on:
      - keycloak-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/auth/"]
      interval: 1s
      timeout: 3s
      retries: 30
  main-db:
    image: postgres
    container_name: main-db
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: alumni_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - 8080:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://main-db:5432/alumni_db
      KEYCLOAK_AUTH_SERVER_URL: http://kubernetes.docker.internal:8081/auth
    depends_on:
      keycloak:
        condition: service_healthy
    extra_hosts:
      - "keycloak:127.0.0.1"
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    ports:
      - 3000:3000